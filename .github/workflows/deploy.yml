name: Deploy Frontend to EC2

on:
  push:
    branches: [ main, dev ] 
  pull_request:
    branches: [ main, dev ] 

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')

    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~
            
            # Check if the repo exists, if so pull latest changes, otherwise clone
            if [ -d "frontend" ]; then
              cd frontend
              git fetch
              git checkout ${{ github.ref_name }}
              git pull
            else
              git clone -b ${{ github.ref_name }} https://github.com/${{ github.repository }}.git frontend
              cd frontend
            fi

            # Install Docker if not already installed
            if ! [ -x "$(command -v docker)" ]; then
              echo 'Installing Docker...'
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release
            
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            fi
            
            
            # Create/update .env file with environment variables
            cat > .env << EOL
            NEXT_PUBLIC_AUTH_BASE_URL=${{ secrets.NEXT_PUBLIC_AUTH_BASE_URL }}
            NEXT_PUBLIC_CHAT_BASE_URL=${{ secrets.NEXT_PUBLIC_CHAT_BASE_URL }}
            NEXT_PUBLIC_KONSULTASI_BASE_URL=${{ secrets.NEXT_PUBLIC_KONSULTASI_BASE_URL }}
            NEXT_PUBLIC_PROFILE_BASE_URL=${{ secrets.NEXT_PUBLIC_PROFILE_BASE_URL }}
            NEXT_PUBLIC_RATING_BASE_URL=${{ secrets.NEXT_PUBLIC_RATING_BASE_URL }}
            EOL
            
            # Check if docker compose is available (either as plugin or standalone)
            if docker compose version > /dev/null 2>&1; then
              # Docker Compose plugin is available
              echo "Using Docker Compose plugin"
            
              # Stop and remove containers if they exist
              sudo docker compose down
            
              # Build and start containers
              sudo docker compose build --no-cache
              sudo docker compose up -d
            
              # Show running containers
              sudo docker compose ps
            elif [ -x "$(command -v docker-compose)" ]; then
              # Docker Compose standalone is available
              echo "Using Docker Compose standalone"
            
              # Stop and remove containers if they exist
              sudo docker-compose down
            
              # Build and start containers
              sudo docker-compose build --no-cache
              sudo docker-compose up -d
            
              # Show running containers
              sudo docker-compose ps
            else
              # Install Docker Compose
              echo "Installing Docker Compose..."
              sudo apt-get update
              sudo apt-get install -y docker-compose-plugin
            
              # Stop and remove containers if they exist
              sudo docker compose down
            
              # Build and start containers
              sudo docker compose build --no-cache
              sudo docker compose up -d
            
              # Show running containers
              sudo docker compose ps
            fi